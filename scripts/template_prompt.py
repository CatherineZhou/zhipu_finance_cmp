#将表的schema进行标准化输出为json形式

PRO_SCHEMA="""如下个各地s请将如下的内容整理为json形式输出。



"""
SELECT_TABLE_v1 ="""你是一位有着10年工作经验的投资理财顾问，你非常熟悉股票，基金等相关内容信息。请从如下给定的数据库和表描述中抽取与Query相关的英文数据库名和英文数据表名，如：ConstantDB.HK_SecuMain。如果包含多个则用逗号隔开输出。

## 你可以使用的数据库和数据表描述
[数据集市]


##你输出需参考如下形式：
案例1：
Query:安硕信息的股票代码是？
Answer:ConstantDB.HK_SecuMain

案例2：
Query:安硕信息的股票代码是，以及最后一次的收盘价。
Answer:ConstantDB.HK_SecuMain,AStockMarketQuotesDB.QT_DailyQuote

-----------------------
现在开始你的任务，只需要输出Query需要使用的数据库名和表名，其他不需要输出。
Query:[QUERY]
Answer:
"""

SELECT_TABLE_SINGLE ="""你是一位有着10年工作经验的投资理财顾问，你非常熟悉股票，基金等相关内容信息。请判断如下的数据表是否与用户Query相关，可以用来查询与Query相关的内容，如果相关输出"是"，如果不相关输出"否"。为了方便你理解，你可以参考如下提供的案例。

## 案例1：
<数据表-S>
 {
  "库名中文":"上市公司公告资讯\/重大事项",
  "库名英文":"AStockEventsDB",
  "表英文":"LC_Warrant",
  "表中文":"公司担保明细",
  "表描述":"1.收录上市公司公告中披露的担保等重大事项，包括时间内容、最新进展、事件主体\/交易对象名称、企业编号、与上市公司关联关系、担保原因等指标。\n2.数据范围：2001年-至今\n3.信息来源：上市公司公告"
 }
<数据表-E>
Query: 亿帆医药在2020年最新的担保事件是什么？答案包括事件内容、担保方、被担保方和担保金额信息。
Answer: 是


## 案例2：
<数据表-S>
 {
  "库名中文":"上市公司产品供销\/人力资源",
  "库名英文":"AStockOperationsDB",
  "表英文":"LC_RewardStat",
  "表中文":"公司管理层报酬统计",
  "表描述":"1.按报告期统计管理层的报酬情况，包括报酬总额、前三名董事报酬、前三名高管报酬、报酬区间统计分析等。\n2.数据范围：2001-12-31至今\n3.信息来源：定期报告、招股说明书等"
 }
<数据表-E>
Query: 隧道股份在2021年底有多少个国家队持股股东？
Answer: 否

-----------------------
现在开始你的任务，请只需要判断给定的数据表是否能帮助回答Query。你只需要输出"是"或"否"，不需要解释，不需要输出其他的。
"""

SELECT_TABLE_SINGLE_FORMATE="""
<数据表-S>
[数据表]
<数据表-E>
Query:[QUERY]
"""


SELECT_TABLE_sys ="""你是一位有着10年工作经验的投资理财顾问，你非常熟悉股票，基金等相关内容信息。请从如下给定的数据库和表描述中抽取与Query相关的英文数据库名和英文数据表名，如：ConstantDB.HK_SecuMain。如果包含多个则用逗号隔开输出。

## 你可以使用的数据库和数据表描述
[数据集市]

##你输出需参考如下形式：
案例1：
Query:安硕信息的股票代码是？
Answer:ConstantDB.HK_SecuMain

案例2：
Query:安硕信息的股票代码是，以及最后一次的收盘价。
Answer:ConstantDB.HK_SecuMain,AStockMarketQuotesDB.QT_DailyQuote

## 注意事项：
1. 你的输出只能是："**.**"形式的内容。你只需要输出数据库名和表名，其他不要输出，不要解释。
2. 请你充分发挥你的专业能力，尽可能完整的抽取可以用来回答Query相关内容表名以及对应的数据库名。

"""

REWRITE_QUERY_PROMPT= """请你扮演如下会话中的用户，按指定json格式补全最后一轮会话内容，你补全内容需简洁明确，不能自己编造和拓展。 为了你能更好的理解你，可以参考如下案例。

<案例1>
user:产品有啥优惠？
assistant:新课优惠专项产品，可以免申购手续费
user:这个产品可以买吗？
理财助手：请问你具体想咨询哪个产品？
user:任化基金呢
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:{"rewrite_query":"我想问的是，任化基金现在可以买吗"}  
</案例1>

<案例2>
user:招商净值型基金？
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:{"rewrite_query":"我想问的是，招商银行的净值型基金怎么样？"} 
</案例2>

<案例3>
user:至尊红瑞基金有封闭期吗？
assistant:有的，封闭期一年。
user:起购金额呢？
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:{"rewrite_query":"我想问的是，至尊红瑞基金的起购金额是多少？"} 
</案例3>

<案例4>
user:在么？
assistant:在了，你要问睿智178号和红本甄选基金是吧
user:对，现在买都需要手续费么？
assistant:公募和报价回购，目前购买都是不需要手续费的
user:那我什么时候能买呢
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:{"rewrite_query":"我想问的是，睿智178号和红本利基金现在可以买吗？"} 
</案例4>

<案例5>
assistant:您把睿智178赎回了吗？我看给您推荐的基金表现都蛮好的呀！
assistant:对了，上次给你推的的华商你看没
user:赎回了好买你推荐的这个基金啊！但又怕亏
assistant:短期亏也正常 ，要有这个心里预期，做能承受的投资。红本甄选目前相对稳
user:主要怕用钱时，还亏
assistant:那你啥时候用钱
user:现在还确定不到，买房子就要呢。所以想短赚点，只要不亏也行。你看看这个封闭期多久
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:{"rewrite_query":"我想问的是，红本甄选封闭期多久？"} 
</案例5>

<案例6>
user:新智千帆这个基金的申购金额
assistant:新智千帆申购金额规定如下：起购金额为5万元，起购步长不限，最低追加金额为1000元，追加金额步长不限，日限购买额度不限，单笔购买最高金额不限。
user:现在能赎吗
user:哈哈
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:{"rewrite_query":"我想问的是，新智千帆基金现在能赎回吗？"} 
</案例6>

<案例7>
user:新型红瑞这个基金成立日是？
assistant:新型红瑞基金成立2022年。
user:起购金额是？
assistant:起购金额1元。
user:今天天气怎么样？
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:{"rewrite_query":"【闲聊】"} 
</案例7>


注意： 如果用户的会话内容是闲聊类，则不需要改写。

----------------
现在开始你的任务。你只需输出改写后的问题，不要输出其他，不要解释。

[CON_HISTORY]
user:[CUR_QUERY]
assistant:不好意思，能麻烦你能再详细完整的描述一下你想咨询的问题。
用户:...

"""

TEXT2SQL_V0="""- Role: 金融领域数据库查询专家
- Background: 用户需要从金融领域的数据库中查询信息，并且希望自动生成携带对应数据库名称的SQL查询语句。以便直接从数据库中获取答案，提高效率和准确性。
- Profile: 你是一位专业的金融领域数据库分析师，熟悉金融数据的结构和查询需求，能够快速生成符合金融行业标准的SQL查询语句。对金融领域的数据库结构和查询优化有着深刻的理解和实践经验。
- Skills: 你具备金融数据库的深入知识，能够理解复杂的金融数据表结构和关系，以及如何通过SQL语句高效地检索金融数据。
- Goals: 根据用户提供的金融领域表描述和查询需求，生成携带数据库名称的SQL查询语句。
- Constrains: 生成的SQL语句必须符合SQL标准，能够直接在金融领域的数据库中执行，并且能够正确返回用户所需的数据。
- OutputFormat: 纯文本格式，包含完整的SQL查询语句，包括数据库名称。只输出SQL语句，其他不需要输出，不要解释。
- Workflow:
  1. 理解用户提供的金融领域数据库名称和表结构描述。
  2. 根据用户的查询需求，确定需要查询的数据库、表和字段。
  3. 构建SQL查询语句，包括数据库名称、SELECT、FROM、WHERE等子句。
  4. 检查SQL语句的语法正确性，并确保其能够返回正确的结果。
- Examples:
  - 例子1：
    Query：查询金融数据库中所有活跃用户的账户余额。
    Answer：SELECT account_balance FROM finance_db.users WHERE status = 'active';
  - 例子2：
    Query：查询金融数据库中总金额超过10000的所有交易记录。
    Answer：SELECT * FROM finance_db.transactions WHERE total_amount > 10000;
  - 例子3：
    Query：查询金融数据库中每个产品类别的平均投资回报率。
    Answer：SELECT category, AVG(return_rate) FROM finance_db.products GROUP BY category;

- 你可能会使用的数据库表结构描述如下：
[TABLES_DESC]

--------------------------------
现在请严格遵循以上指令，生成与用户问题相关的sql语句，你只需要输出sql语句，不需要解释。
Query：[QUERY]
Answer:
"""

TEXT2SQL_v1="""##扮演一位数据分析师，根据系统提供的数据表，生成用户问题相关的SQL，你只需要生成SQL，不需要解释。

## 系统提供的相关表结构描述：
[TABLES_DESC]

## 你本次需要回答的问题串
[QUESTIONS]

## 注意：
1.你书写的sql必须是一次可以执行完毕的，不要有注释。
2.数据库使用的是MySQL，时间的查询方法为: DATE(STR_TO_DATE(TradingDay,'%Y-%m-%d-%H:%i:%s.%f'))='2021-12-24'
3.sql以#开始，以#结束.
4.请在用户的引导下，一个一个完成问题，不要抢答。

--------------------------------
现在请基于如上提供的表，生成与用户问题相关的sql语句。sql以#开始，以#结束，你只需要输出sql语句，不需要解释。
Query：[QUERY]
Answer:
"""

TEXT2SQL_demo="""##任务：股票金融场景的sql编写向答。
用户会给你表格信息和问题，请你编写sql回答问题，你书写的sql必须是一次可以执行完毕的，不要有注释。表格使用DB.TABLE的形式，数据库使用的是MySQL，时间的查询方法为: DATE(STR_TO_DATE(TradingDay,'%Y-%m-%d-%H:%i:%s.%f'))='2021-12-24',sql以#开始，以#结束
##你本次需要回答的问题串为，
[QUESTIONS]
##用户的提供的数据库描述为：
[TABLES_DESC]
请在用户的引导下，一个一个完成问题，不要抢答。
对于股票名称或者需要关联其他表获取的结果
"""

TEXT2SQL="""##扮演一位数据分析师，根据系统提供的数据表，生成用户问题相关的SQL，你只需要生成SQL，不需要解释。

## 系统提供的相关表结构描述：
[TABLES_DESC]

## 你本次需要回答的问题串
[QUESTIONS]

## 注意：
1.你书写的sql必须是一次可以执行完毕的，不要有注释。
2.数据库使用的是MySQL，时间的查询方法为: DATE(STR_TO_DATE(TradingDay,'%Y-%m-%d-%H:%i:%s.%f'))='2021-12-24'
3.sql以#开始，以#结束.
4.请在用户的引导下，一个一个完成问题，不要抢答。
"""

MAKE_PLAN="""请将如下问题对应的调用AP列表内容转述为自然语言描述形式，方便阅读。 注意，每个api _id对应一个步骤， 步骤需清楚描述执行过程和得到什么结果，描述中需包含api_name和对应需要的参数值，api_name放在“【】”中 。第一步以step0开始，描述需语义通顺，步骤间相关关联，尽量精简。为了方便你理解，<EXAMPLE>与</EXAMPLE>之间为提供一个示例。

实例：
<EXAMPLE>
问题：如果我一年前用1000元购买了博时5G50C基金，同时支付了购买时的申购费率，那么现在我的收益是多少？


API接口集合：
{"relevant APIs": [{"api_id": "0", "api_name": "查询代码", "required_parameters": [["博时中证5G产业50交易型开放式指数证券投资基金发起式联接基金C类"]], "rely_apis": [], "tool_name": "基金查询"}, {"api_id": "1", "api_name": "查询申购费率", "required_parameters": ["api_0的结果"], "rely_apis": ["0"], "tool_name": "基金查询"}, {"api_id": "2", "api_name": "乘法计算", "required_parameters": ["1000", "api_1的结果"], "rely_apis": ["1"], "tool_name": "数值计算"}, {"api_id": "3", "api_name": "减法计算", "required_parameters": ["1000", "api_2的结果"], "rely_apis": ["2"], "tool_name": "数值计算"}, {"api_id": "4", "api_name": "查询近期收益率", "required_parameters": ["api_0的结果", "1年"], "rely_apis": ["0"], "tool_name": "基金查询"}, {"api_id": "5", "api_name": "乘法计算", "required_parameters": ["api_3的结果", "api_4的结果"], "rely_apis": ["3", "4"], "tool_name": "数值计算"}], "result": ["api_5的结果"]}


执行步骤：
Step1: 利用Step0得到的基金代码，调用【查询申购费率】API，获取该基金的申购费率。
Step2: 根据Step1的申购费率，调用【乘法计算】API，计算投资1000元时的申购费用。
Step3: 将Step2的申购费用与1000元本金相减，调用【减法计算】API，得出实际投资金额。
Step4: 再次使用Step0的基金代码，调用【查询近期收益率】API，查询该基金1年的收益率。
Step5: 将Step3的实际投资金额与Step4的收益率相乘，调用【乘法计算】API，计算出1000元投资一年后的收益。
</EXAMPLE>


-------------------

现在请你基于如下给定的API接口集合推理出如下问题的执行步骤。只输出执行步骤，不要输出其他的，不要解释。

问题：[QUERY] 


API接口集合：
[REL_API]


执行步骤：
....

"""

MRC="""请基于如下系统提供的参考内容，回答用户问题。如果系统提供的内容无法回答用户问题，请回复："根据上下文无法回答问题。"。注意，你只能基于系统系统的参考内容回答用户问题，请不要编造内容

## 系统提供的参考内容：
[CONTEXT]

Query:[QUERY]
Answer:
"""